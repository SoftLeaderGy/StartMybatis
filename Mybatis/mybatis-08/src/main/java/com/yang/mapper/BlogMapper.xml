<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yang.mapper.BlogMapper">
<!--    在当前Mapper.xml中使用二级缓存-->
    <cache/>
    <select id="getBlogsIf" resultType="Blog" parameterType="Map">
        select * from blog
        <where>
            <include refid="if-title"></include>
        </where>
    </select>

    <sql id="if-title">
        <if test="title != null">
            and title = #{title}
        </if>
    </sql>

    <insert id="addBlog" parameterType="Blog">
        insert into blog (id, title, author, create_time, views)
        values (#{id}, #{title}, #{author}, #{createTime}, #{views})
    </insert>

    <select id="getBlogChoose" resultType="Blog">
        select * from blog
        <where>
            <choose>
                <when test="title != null">
                    and title = #{title}
                </when>
                <when test="id != null">
                    and id = #{id}
                </when>
                <when test="views != null">
                    and views = #{views}
                </when>
                <otherwise>
                    and author = #{author}
                </otherwise>
            </choose>
        </where>
    </select>

    <update id="updateBlog" parameterType="map">
        update blog
        <set>
            <if test="title != null">
                title = #{title},
            </if>
            <if test="author != null">
                author = #{author},
            </if>
            <if test="views != null">
                views = #{views}
            </if>
            where id = #{id}
        </set>
    </update>
    <!--
        select * from blog where 1=1 and (id=1 or id = 2 or id = 3)

        我们需要传递一个万能的map，这个map中可以存一个集合！
        collection="ids" 集合名称
        item="id"        遍历集合后的每一项名称
        open="and ("     以什么开头
        close=")"        以什么结尾
        separator="or"   每一项的分隔符
    -->
    <select id="selectBlogForeach" parameterType="map" resultType="Blog">
        select * from blog
        <where>
            <foreach collection="ids" item="id" open="and (" close=")" separator="or">
                id = #{id}
            </foreach>
        </where>
    </select>
</mapper>