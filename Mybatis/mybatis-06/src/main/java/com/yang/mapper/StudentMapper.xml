<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yang.mapper.StudentMapper">

  <select id="getStudent1" resultMap="StudentTeacher">
      SELECT
          s.id AS sid,
          s.`name` AS sname,
          t.`name` as tname
      FROM
          student s,
          teacher t
  </select>
    <resultMap id="StudentTeacher" type="Student">
        <result property="id" column="sid"/>
        <result property="name" column="sname"/>

        <association property="teacher" javaType="Teacher">
            <result property="name" column="tname"/>
        </association>
    </resultMap>

<!--=============================================================-->
<!--
思路：
    1、查询所有的学生信息
    2、根据所有的学生信息的tid，寻找对应的老师 相当于子查询
-->


    <select id="getStudent" resultMap="getStudent">
        select * from student
    </select>

    <resultMap id="getStudent" type="Student">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
<!--        复杂的属性，我们需要单独处理  对象：association 集合：collection-->
        <association property="teacher" column="tid" javaType="Teacher" select="getTeacher"/>
    </resultMap>

    <select id="getTeacher" resultType="Teacher">
        select * from teacher where id = #{tid}
    </select>
</mapper>